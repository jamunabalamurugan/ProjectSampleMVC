@model IEnumerable<OnlineExamSystem.Models.QUESTION>

@{
    ViewBag.Title = "Questions";
}
<head>
    <script>
        //function preventBack() { window.history.forward(); }
        //setTimeout("preventBack()", 0);
        //window.onunload = function () { null };
        function noBack() { window.history.forward() }
        noBack();
        window.onload = noBack;
        window.onpageshow = function (evt) { if (evt.persisted) noBack() }
        window.onunload = function () { void (0) }
    </script>
</head>
@{
    List<SelectListItem> options = new List<SelectListItem>();
    options.Add(new SelectListItem
    {
        Text = "1",
        Value = "1"
    });
    options.Add(new SelectListItem
    {
        Text = "2",
        Value = "2",
    });
    options.Add(new SelectListItem
    {
        Text = "3",
        Value = "3"
    });
    options.Add(new SelectListItem
    {
        Text = "4",
        Value = "4"
    });
}
@Styles.Render("~/Content/css")
@Scripts.Render("~/bundles/modernizr")
<script>
    var mins = 1;
    var secs = mins * 60;
    function countdown() {
        setTimeout('Decrement()', 60);
    }
    function enabletext() {
        var e = document.getElementsByName("correctans");
        for (var i = 0; i < e.length; i++) {
            x = e[i];
            x.disabled = false;
            //x.readonly = true;
            console.log(x.disabled);
        }       
    }    
    function Decrement() {
        if (document.getElementById) {
            minutes = document.getElementById("minutes");
            seconds = document.getElementById("seconds");
            if (seconds < 59) {
                seconds.value = secs;
            }
            else {
                minutes.value = getminutes();
                seconds.value = getseconds();
            }
            if (mins < 1) {
                minutes.style.color = "red";
                seconds.style.color = "red";
            }
            if (mins < 0) {
                confirm('Test time up!');
                var e = document.getElementsByName("correctans");
                for (var i = 0; i < e.length; i++) {
                    x = e[i];
                    x.disabled = true;
                    //x.readonly = true;
                    console.log(x.disabled);
                }
                minutes.value = 0;
            }
            else {
                secs--;
                setTimeout('Decrement()', 1000);
            }
        }
    }
    function getminutes() {
        mins = Math.floor(secs / 60);
        return mins;
    }
    function getseconds() {
        return secs - Math.round(mins * 60);
    }
    function SubmitForm() {
        var r = confirm("Are you sure you want to submit?");
        if (r == false) {
            return false;
        }
    }
    //window.onload = function () {
    //    window.setTimeout('document.qrcodeRedirectForm.submit()', 500)
    //}
</script>
<body onload="countdown();">
    <div>
        Time Left ::
        <input id="minutes" type="text" style="width: 10px;
             border: none; font-size: 16px;
            font-weight: bold; color: black;"><font size="5">
            :
        </font>
        <input id="seconds" type="text" style="width: 20px;
                        border: none; font-size: 16px;
                        font-weight: bold; color: black;">
    </div>
</body>
<h3>Level: @Session["CheckLevel"]</h3>
@using (Html.BeginForm("Questions", "User", FormMethod.Post, new { id = "questions" }))
{
    @Html.AntiForgeryToken()
    <title>Questions</title>
    <h2>Questions</h2>
    <ol type="1">
        @foreach (var item in Model)
        {
            <li>
                @Html.DisplayFor(modelItem => item.QUESTION1)
                <br />
                @Html.DisplayFor(modelItem => item.OPTION1)
                <br />
                @Html.DisplayFor(modelItem => item.OPTION2)
                <br />
                @Html.DisplayFor(modelItem => item.OPTION3)
                <br />
                @Html.DisplayFor(modelItem => item.OPTION4)
                <br />
                <div class="form-group">
                    @Html.LabelFor(modelItem => item.Chosen_Answer, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="text"  name="correctans" value="0" />
                        @Html.ValidationMessageFor(modelItem => item.Chosen_Answer, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                <br />
            </li>
        }
    </ol>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" name="name" value="Submit" onclick="javascript: return enabletext();" class="btn-info" />
        </div>
    </div>
}
<script type="text/javascript" src="http://ajax.microsoft.com/ajax/jquery/jquery-1.6.1.min.js"></script>