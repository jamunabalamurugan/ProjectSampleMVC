@model OnlineExamSystem.Models.QUESTION


@{
    ViewBag.Title = "Add Questions";
}
<title>Add Questions</title>

@{
    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
    {
        Text = "1",
        Value = "1"
    });
    listItems.Add(new SelectListItem
    {
        Text = "2",
        Value = "2",
        Selected = true
    });
    listItems.Add(new SelectListItem
    {
        Text = "3",
        Value = "3"
    });
}

<h2>Add Questions</h2>
<br />
<br />
<input class="btn-info" type="button" value="Go to Dashboard" onclick="@("window.location.href='" + @Url.Action("AdminDashboard", "Admin") + "'");" />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.TECHNOLOGY_ID, "Technology", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TECHNOLOGY_ID", new SelectList(ViewBag.TECHNOLOGies, "TECHNOLOGY_ID", "TECHNOLOGY_NAME"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TECHNOLOGY_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QUESTION1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QUESTION1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QUESTION1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OPTION1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OPTION1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OPTION1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OPTION2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OPTION2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OPTION2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OPTION3, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OPTION3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OPTION3, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OPTION4, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OPTION4, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OPTION4, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RIGHT_ANSWER, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RIGHT_ANSWER, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RIGHT_ANSWER, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TEST_LEVEL, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TEST_LEVEL, listItems, "-- Select Level --", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TEST_LEVEL, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn-info" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}