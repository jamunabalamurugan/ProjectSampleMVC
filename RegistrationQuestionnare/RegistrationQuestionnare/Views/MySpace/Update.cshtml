@model RegistrationQuestionnare.Models.EmployeePersonalDetail
@using RegistrationQuestionnare.Models
@{
    ViewBag.Title = "Edit";
}

<h2 style="background-color:aliceblue">Update Details</h2>
<style>
    ﻿ /* Add a black background color to the top navigation */
    .topnav {
        background-color: aliceblue;
        overflow: hidden;
    }

    /* Style the links inside the navigation bar */
    .topnav a {
        float: left;
        color: black;
        text-align: center;
        padding: 14px 16px;
        text-decoration: none;
        font-size: 17px;
        float: right;
    }

        /* Change the color of links on hover */
        .topnav a:hover {
            background-color: #ddd;
            color: black;
        }

        /* Add a color to the active/current link */
        .topnav a.active {
            background-color: #4CAF50;
            color: white;
        }

    h1 {
        text-align: center;
    }

    img {
        height: 80vh;
        width: 100%;
        background-repeat: no-repeat;
        margin-right: -1px;
        margin-left: -1px;
        margin-bottom: -1px;
    }

    .bg-text {
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0, 0.4); /* Black w/opacity/see-through */
        color: white;
        font-weight: bold;
        border: 3px solid #f1f1f1;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 2;
        width: 80%;
        padding: 20px;
        text-align: center;
    }
    /*For rounded corner squares*/
    #rcorners {
        border-radius: 25px;
        background-color: gray;
        padding: 20px;
        width: 200px;
        height: 150px;
        margin: 40px;
        vertical-align: middle;
        line-height: 150px;
        display: inline-block;
        text-align: center;
        font-size: 90px;
        /*Add space between squares*/
    }
    /*The size of font*/
    #Webname {
        font-size: x-large;
    }
    /*Styling of the footer*/
    #footers {
        font-size: 23px;
        background-color: gainsboro;
    }
    /*For About Page*/
    #AboutText {
        color: maroon;
        background-color: aliceblue;
        font-size: 50px;
        font-weight: 500;
    }


    /*Styling the company logo*/
    #CompanyLogo {
        border-radius: 50%;
        height: 140px;
        width: 140px;
        float: left;
    }

    #emoji, #emoji1, #emoji2, #emoji3, #emoji4 {
        height: 100px;
        width: 100px;
        display: inline-block;
        justify-content: center;
    }
    /*For preference rounded corners*/
    #prefround {
        border-radius: 50px;
        background-color: gray;
        padding: 20px;
        width: 250px;
        height: 40px;
        margin: 30px;
        vertical-align: middle;
        line-height: 50px;
        display: inline-block;
        margin-bottom: 0;
        /*Add space between squares*/
    }
    /*For contact rounded corners*/
    #rcornerscontact {
        border-radius: 50px;
        /*background-color: gray;*/
        padding: 20px;
        width: 350px;
        height: 450px;
        margin: 30px;
        vertical-align: middle;
        line-height: 50px;
        display: inline-block;
        margin-bottom: 0;
        text-align: center;
        font-size: 50px;
        display: inline-block;
    }
    /*CSS for image of map*/
    #mapimg {
        border-radius: 25px;
        display: inline-block;
        width: 40%;
        height: 50%;
        position: absolute;
        bottom: 10px;
    }
    /*For styling developers names in about us*/
    #abtround {
        color: white;
        border-radius: 25px;
        background-color: gray;
        padding: 20px;
        width: 100px;
        height: 15px;
        /*margin: 30px;*/
        vertical-align: middle;
        line-height: 10px;
        display: inline-block;
        margin-bottom: 10px;
        margin-left: 10px;
        /*margin-right:10px;*/
        /*margin-top:10px;*/
        font-size: 25px;
        display: inline-block;
        border-style: solid;
        border-color: white;
        float: right;
    }
    /*#aboutustext{
            font-size:medium;
            float:left;
            column-count:1;
        }*/
    .btn-default {
        margin: 20px;
        padding: 15px 25px;
        font-size: 24px;
        text-align: center;
        cursor: pointer;
        outline: none;
        color: #fff;
        background-color: #4CAF50;
        border: none;
        border-radius: 15px;
        box-shadow: 0 9px #999;
        position: center;
        align-content: center;
        margin-top: 100px;
    }

        .btn-default:hover {
            background-color: #3e8e41
        }

        .btn-default:active {
            background-color: #3e8e41;
            box-shadow: 0 5px #666;
            transform: translateY(4px);
        }

    .form-horizontal {
        border-radius: 25px;
        background-color: lightgray;
        width: 75%;
    }
</style>

<body style="background-image:url('@Url.Content("~/Images/pageBg.PNG")');width: 100%; height: 600px">


    @using (Html.BeginForm("Update", "MySpace", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <hr />


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.vEmpID)

            <div class="form-group">
                @Html.LabelFor(model => model.vEmpName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.vEmpName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.vEmpName, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.iWorkingHours)


            <div class="form-group">
                @Html.LabelFor(model => model.vWorkDomain, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.vWorkDomain, new SelectList(Enum.GetValues(typeof(Domain))), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.vWorkDomain, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.vWorkingLocation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.vWorkingLocation, new SelectList(Enum.GetValues(typeof(Location))), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.vWorkingLocation, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.iEmpAge)

            <div class="form-group">
                @Html.LabelFor(model => model.vEmpMobile, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.vEmpMobile, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.vEmpMobile, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.vEmpMail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.vEmpMail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.vEmpMail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.vEmpGender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.vEmpGender, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.vEmpGender, "", new { @class = "text-danger" })*@
                    @Html.DropDownListFor(model => model.vEmpGender, new SelectList(Enum.GetValues(typeof(Gender))), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.vEmpGender, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.dBirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.dBirthDate, new { htmlAttributes = new { @*Value = Model.dBirthDate.Value.ToString("dd-MMM-yyyy"),*@@class = "form-control date-picker"
                }
            })
                    @Html.ValidationMessageFor(model => model.dBirthDate, "", new { @class = "text-danger" })
                </div>
            </div>


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.bMaritialStatus)


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.iCreditPoints)

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.vPassword)


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.bAdmin)


            <div class="form-group">
                @Html.LabelFor(model => model.ProfilePhoto, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProfilePhoto, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProfilePhoto, "", new { @class = "text-danger" })
                    <p style="color:red">@ViewBag.Error</p>
                    @*<input type="file" name="~/Images/blank_profile_pic.png" >*@
                    <input type="file" name="ImageUpload" />
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>


    }
</body>

<div>
    @*@Html.ActionLink("Back to MySpace", "Details", new { id = Model.vEmpID })*@
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}



